prop和state

React组件里的数据分为两种-prop和state

这两种数据改变即可能引起组件的渲染(只是可能，不是一定会修改的)。

prop和state的主要区别：

1.prop是由外部传入的，是组件无法修改的

2.state是用于记录组件内部的状态的，因此组件可以修改


组件的生命周期

组件在生命周期中可能会经历三个过程:
    1.装载(Mount).即组件第一次在DOM树中渲染的过程
    
    2.更新(Update),即组件重新渲染的过程
    
    3.卸载(Unmount),即组件从DOM树中删除的过程

1.装载:
    组件装载过程中会经历以下阶段:
        constructor ->getInitialState ->getDefaultProps ->
        componentWillMount ->render ->componentDidMount
        
 constructor是组件类的构造函数,我们在这里完成组件的初始化工作
 
 render 是整个React组件中最重要的函数，组件通过该函数的返回值进行渲染。
 
 render函数不做实际的渲染动作，它只是返回一个JSX描述的解构，最终由React来操作渲染过程


componentWillMount和componentDidMount的调用分别发生在render前后


2.更新:

    组件的更新过程会经历以下阶段：
        componentWillReceiveProps -> shouldComponentUpdate -> 
        componentWillUpdate -> render -> componentDidUpdate










JSX :

1.在return语句中，返回的DOM节点只能有一个根节点，也就是说顶层节点不能有两个(否则会报错)

    // 错误示例
    return (
      <div>Node 1</div>
      <div>Node 2</div>
    )

2.需要注意JS和HTML中的关键字冲突。我们不能在里面写class=xxx,而应该将class替换为className     


React工作方式的优点：函数式编程思维


react-intl React国际化解决方案

   根结构
    src===>  api/componentc/layouts/locales/pages/store/utiles
    index/router/ruducers/config
    二级目录
    api===> index/requese/user
    components===>CustormForm/SearchFilter
    layouts ===>BasicLayout/UserLayout
    locales ===>en=US/zh-CN
    pages ===> sql/chart
    store===>userLogot/userProfile
    utils===>authority
